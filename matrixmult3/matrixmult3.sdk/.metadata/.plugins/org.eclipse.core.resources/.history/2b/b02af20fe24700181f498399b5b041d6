/*
 * speakeridui.c: simple front end to initiate the speaker id application
 *
 * PS7 UART (Zynq) is not initialized by this application, since
 * bootrom/bsp configures it to baud rate 115200
 * ps7_uart    115200 (configured by bootrom/bsp)
 */

#include <stdio.h>
#include "platform.h"
#include "xil_printf.h"
#include "xgpio.h"
#include "xscugic.h"
#include "xil_exception.h"
#include "xparameters.h"
#include "xuartps.h"

#define UART_BASEADDR XPAR_PS7_UART_1_BASEADDR
#define GPIO_DEVICE_ID  XPAR_AXI_GPIO_0_DEVICE_ID	/* GPIO device that LEDs are connected to */
#define LED 0x9										/* Initial LED value - X00X */
#define LED_DELAY 40000000							/* Software delay length */
#define LED_CHANNEL 1								/* GPIO port for LEDs */

XGpio Gpio;											/* GPIO Device driver instance */

int main()
{
    init_platform();

    print("Welcome to the demo speaker ID FPGA front-end application 2!\n\r");

	u8 inp = 0x00;
	u32 CntrlRegister;
	CntrlRegister = XUartPs_ReadReg(UART_BASEADDR, XUARTPS_CR_OFFSET);

	XUartPs_WriteReg(UART_BASEADDR, XUARTPS_CR_OFFSET,
				  ((CntrlRegister & ~XUARTPS_CR_EN_DIS_MASK) |
				   XUARTPS_CR_TX_EN | XUARTPS_CR_RX_EN));

	volatile int Delay;
	int Status;
	int led = LED; /* Hold current LED value. Initialise to LED definition */

	XGpio_SetDataDirection(&Gpio, LED_CHANNEL, 0x0);
	Status = XGpio_Initialize(&Gpio, GPIO_DEVICE_ID);
	if (Status != XST_SUCCESS) {
		xil_printf("GPIO output to the LEDs failed!\r\n");

	} else {
		while(1) {
			print("Press 's' to start verification!\n\r");
			while (!XUartPs_IsReceiveData(UART_BASEADDR));
			inp = XUartPs_ReadReg(UART_BASEADDR, XUARTPS_FIFO_OFFSET);

			switch(inp){
			case 13:
				break;
			case 's':
				xil_printf("Starting verification...\r\n");
				XGpio_DiscreteWrite(&Gpio, LED_CHANNEL, led);
				for (Delay = 0; Delay < LED_DELAY; Delay++);
				break;
			default:
				xil_printf("Pressed %d. Did not recognize character.\r\n", inp);
				break;
			}
		}
	}

    cleanup_platform();
    return 0;
}
